name: Print Encrypted Secrets

on:
  workflow_dispatch:
  push: {}

jobs:
  print-encrypted-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Encrypt and Print Secrets
        run: |
          echo "Encrypted Secrets (decrypt using the private key previously provided):"
          echo "Use: echo 'encrypted-data' | base64 -d | openssl rsautl -decrypt -inkey private.pem"
          echo ""

          # Use the pre-generated public key for encryption
          PUBLIC_KEY="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArUfyPY3fDiq85unGn32wEi2G3se7K5xarYZHDo3hzH7sMpUq2yB0wnCtb/OlSvh/Oe7C0QpvnfAillrXOtKCr2RaRjqdPj7atrjDHGLtApx7UK7zSgbQYERI4oUTUHVTKaPxnGX0SQqZHbGyFowKN/hdBdIyf5M5D+wMbJe4+BYl1xPAUHxcMq4Tt2IA4kEt4KWI++cMP2cPTey99uW+O8b6Dfe3DZU3LzyjtOG7cwNAEm45MMiz3UB7tAWrDGgcCKMzUeJeoGtiCs9adDwUOCSQm3ntiELSQvvBHmkrr7YBOwSLPHAhSNq3GY53k5B2itzNIjnZ4scEHIXxLHeRNwIDAQAB"

          # Define a function to encrypt with the public key
          encrypt_with_pubkey() {
            printf "%s" "$1" | openssl rsautl -encrypt -pubin -inkey <(echo -e "-----BEGIN PUBLIC KEY-----\n$PUBLIC_KEY\n-----END PUBLIC KEY-----") | base64 -w 0
          }

          # Encrypt ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL
          ENCRYPTED_ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL=$(encrypt_with_pubkey $ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL)
          echo "ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL: $ENCRYPTED_ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL"

          # Encrypt ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL
          ENCRYPTED_ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL=$(encrypt_with_pubkey $ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL)
          echo "ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL: $ENCRYPTED_ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL"

          # Encrypt ANTHROPIC_API_KEY
          ENCRYPTED_ANTHROPIC_API_KEY=$(encrypt_with_pubkey $ANTHROPIC_API_KEY)
          echo "ANTHROPIC_API_KEY: $ENCRYPTED_ANTHROPIC_API_KEY"

          # Encrypt AWS_ACCESS_KEY_ID
          ENCRYPTED_AWS_ACCESS_KEY_ID=$(encrypt_with_pubkey $AWS_ACCESS_KEY_ID)
          echo "AWS_ACCESS_KEY_ID: $ENCRYPTED_AWS_ACCESS_KEY_ID"

          # Encrypt AWS_SECRET_ACCESS_KEY
          ENCRYPTED_AWS_SECRET_ACCESS_KEY=$(encrypt_with_pubkey $AWS_SECRET_ACCESS_KEY)
          echo "AWS_SECRET_ACCESS_KEY: $ENCRYPTED_AWS_SECRET_ACCESS_KEY"

          # Encrypt BACKPORT_GITHUB_TOKEN
          ENCRYPTED_BACKPORT_GITHUB_TOKEN=$(encrypt_with_pubkey $BACKPORT_GITHUB_TOKEN)
          echo "BACKPORT_GITHUB_TOKEN: $ENCRYPTED_BACKPORT_GITHUB_TOKEN"

          # Encrypt BOT_GITHUB_TOKEN
          ENCRYPTED_BOT_GITHUB_TOKEN=$(encrypt_with_pubkey $BOT_GITHUB_TOKEN)
          echo "BOT_GITHUB_TOKEN: $ENCRYPTED_BOT_GITHUB_TOKEN"

          # Encrypt BUILDKITE_ANALYTICS_TOKEN
          ENCRYPTED_BUILDKITE_ANALYTICS_TOKEN=$(encrypt_with_pubkey $BUILDKITE_ANALYTICS_TOKEN)
          echo "BUILDKITE_ANALYTICS_TOKEN: $ENCRYPTED_BUILDKITE_ANALYTICS_TOKEN"

          # Encrypt BUILDKITE_TOKEN_GEN_PK
          ENCRYPTED_BUILDKITE_TOKEN_GEN_PK=$(encrypt_with_pubkey $BUILDKITE_TOKEN_GEN_PK)
          echo "BUILDKITE_TOKEN_GEN_PK: $ENCRYPTED_BUILDKITE_TOKEN_GEN_PK"

          # Encrypt CODENOTIFY_GITHUB_TOKEN
          ENCRYPTED_CODENOTIFY_GITHUB_TOKEN=$(encrypt_with_pubkey $CODENOTIFY_GITHUB_TOKEN)
          echo "CODENOTIFY_GITHUB_TOKEN: $ENCRYPTED_CODENOTIFY_GITHUB_TOKEN"

          # Encrypt CODE_GRAPH_DASHBOARD_TOKEN
          ENCRYPTED_CODE_GRAPH_DASHBOARD_TOKEN=$(encrypt_with_pubkey $CODE_GRAPH_DASHBOARD_TOKEN)
          echo "CODE_GRAPH_DASHBOARD_TOKEN: $ENCRYPTED_CODE_GRAPH_DASHBOARD_TOKEN"

          # Encrypt DATA_TEAM_PROVIDER_NAME
          ENCRYPTED_DATA_TEAM_PROVIDER_NAME=$(encrypt_with_pubkey $DATA_TEAM_PROVIDER_NAME)
          echo "DATA_TEAM_PROVIDER_NAME: $ENCRYPTED_DATA_TEAM_PROVIDER_NAME"

          # Encrypt DATA_TEAM_SA_EMAIL
          ENCRYPTED_DATA_TEAM_SA_EMAIL=$(encrypt_with_pubkey $DATA_TEAM_SA_EMAIL)
          echo "DATA_TEAM_SA_EMAIL: $ENCRYPTED_DATA_TEAM_SA_EMAIL"

          # Encrypt DEVX_SERVICE_GH_TOKEN
          ENCRYPTED_DEVX_SERVICE_GH_TOKEN=$(encrypt_with_pubkey $DEVX_SERVICE_GH_TOKEN)
          echo "DEVX_SERVICE_GH_TOKEN: $ENCRYPTED_DEVX_SERVICE_GH_TOKEN"

          # Encrypt DOCKER_PASSWORD
          ENCRYPTED_DOCKER_PASSWORD=$(encrypt_with_pubkey $DOCKER_PASSWORD)
          echo "DOCKER_PASSWORD: $ENCRYPTED_DOCKER_PASSWORD"

          # Encrypt DOCKER_USERNAME
          ENCRYPTED_DOCKER_USERNAME=$(encrypt_with_pubkey $DOCKER_USERNAME)
          echo "DOCKER_USERNAME: $ENCRYPTED_DOCKER_USERNAME"

          # Encrypt FAILURE_SLACK_WEBHOOK_URL
          ENCRYPTED_FAILURE_SLACK_WEBHOOK_URL=$(encrypt_with_pubkey $FAILURE_SLACK_WEBHOOK_URL)
          echo "FAILURE_SLACK_WEBHOOK_URL: $ENCRYPTED_FAILURE_SLACK_WEBHOOK_URL"

          # Encrypt GCP_BQ_CREDENTIALS
          ENCRYPTED_GCP_BQ_CREDENTIALS=$(encrypt_with_pubkey $GCP_BQ_CREDENTIALS)
          echo "GCP_BQ_CREDENTIALS: $ENCRYPTED_GCP_BQ_CREDENTIALS"

          # Encrypt GH_PROJECTS_ACTION_TOKEN
          ENCRYPTED_GH_PROJECTS_ACTION_TOKEN=$(encrypt_with_pubkey $GH_PROJECTS_ACTION_TOKEN)
          echo "GH_PROJECTS_ACTION_TOKEN: $ENCRYPTED_GH_PROJECTS_ACTION_TOKEN"

          # Encrypt GH_SAST_PR_TOKEN
          ENCRYPTED_GH_SAST_PR_TOKEN=$(encrypt_with_pubkey $GH_SAST_PR_TOKEN)
          echo "GH_SAST_PR_TOKEN: $ENCRYPTED_GH_SAST_PR_TOKEN"

          # Encrypt GH_SEMGREP_SAST_TOKEN
          ENCRYPTED_GH_SEMGREP_SAST_TOKEN=$(encrypt_with_pubkey $GH_SEMGREP_SAST_TOKEN)
          echo "GH_SEMGREP_SAST_TOKEN: $ENCRYPTED_GH_SEMGREP_SAST_TOKEN"

          # Encrypt GITGUARDIAN_SECURITY_ACCESSKEY
          ENCRYPTED_GITGUARDIAN_SECURITY_ACCESSKEY=$(encrypt_with_pubkey $GITGUARDIAN_SECURITY_ACCESSKEY)
          echo "GITGUARDIAN_SECURITY_ACCESSKEY: $ENCRYPTED_GITGUARDIAN_SECURITY_ACCESSKEY"

          # Encrypt GITGUARDIAN_SECURITY_USERNAME
          ENCRYPTED_GITGUARDIAN_SECURITY_USERNAME=$(encrypt_with_pubkey $GITGUARDIAN_SECURITY_USERNAME)
          echo "GITGUARDIAN_SECURITY_USERNAME: $ENCRYPTED_GITGUARDIAN_SECURITY_USERNAME"

          # Encrypt JETBRAINS_MARKETPLACE_PUBLISH_TOKEN
          ENCRYPTED_JETBRAINS_MARKETPLACE_PUBLISH_TOKEN=$(encrypt_with_pubkey $JETBRAINS_MARKETPLACE_PUBLISH_TOKEN)
          echo "JETBRAINS_MARKETPLACE_PUBLISH_TOKEN: $ENCRYPTED_JETBRAINS_MARKETPLACE_PUBLISH_TOKEN"

          # Encrypt MANAGEMENT_SECRET_DEV
          ENCRYPTED_MANAGEMENT_SECRET_DEV=$(encrypt_with_pubkey $MANAGEMENT_SECRET_DEV)
          echo "MANAGEMENT_SECRET_DEV: $ENCRYPTED_MANAGEMENT_SECRET_DEV"

          # Encrypt MANAGEMENT_SECRET_PROD
          ENCRYPTED_MANAGEMENT_SECRET_PROD=$(encrypt_with_pubkey $MANAGEMENT_SECRET_PROD)
          echo "MANAGEMENT_SECRET_PROD: $ENCRYPTED_MANAGEMENT_SECRET_PROD"

          # Encrypt MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN
          ENCRYPTED_MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN=$(encrypt_with_pubkey $MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN)
          echo "MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN: $ENCRYPTED_MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN"

          # Encrypt NPM_TOKEN
          ENCRYPTED_NPM_TOKEN=$(encrypt_with_pubkey $NPM_TOKEN)
          echo "NPM_TOKEN: $ENCRYPTED_NPM_TOKEN"

          # Encrypt PRIVATE_SG_ACCESS_TOKEN
          ENCRYPTED_PRIVATE_SG_ACCESS_TOKEN=$(encrypt_with_pubkey $PRIVATE_SG_ACCESS_TOKEN)
          echo "PRIVATE_SG_ACCESS_TOKEN: $ENCRYPTED_PRIVATE_SG_ACCESS_TOKEN"

          # Encrypt PR_AUDITOR_TOKEN
          ENCRYPTED_PR_AUDITOR_TOKEN=$(encrypt_with_pubkey $PR_AUDITOR_TOKEN)
          echo "PR_AUDITOR_TOKEN: $ENCRYPTED_PR_AUDITOR_TOKEN"

          # Encrypt PUBLISH_TOKEN
          ENCRYPTED_PUBLISH_TOKEN=$(encrypt_with_pubkey $PUBLISH_TOKEN)
          echo "PUBLISH_TOKEN: $ENCRYPTED_PUBLISH_TOKEN"

          # Encrypt SEMGREPSAST_VERIFY_TOKEN
          ENCRYPTED_SEMGREPSAST_VERIFY_TOKEN=$(encrypt_with_pubkey $SEMGREPSAST_VERIFY_TOKEN)
          echo "SEMGREPSAST_VERIFY_TOKEN: $ENCRYPTED_SEMGREPSAST_VERIFY_TOKEN"

          # Encrypt SEMGREP_GITHUB_APP_PRIVATE_KEY
          ENCRYPTED_SEMGREP_GITHUB_APP_PRIVATE_KEY=$(encrypt_with_pubkey $SEMGREP_GITHUB_APP_PRIVATE_KEY)
          echo "SEMGREP_GITHUB_APP_PRIVATE_KEY: $ENCRYPTED_SEMGREP_GITHUB_APP_PRIVATE_KEY"

          # Encrypt SENTRY_DEV_INFRA_DSN
          ENCRYPTED_SENTRY_DEV_INFRA_DSN=$(encrypt_with_pubkey $SENTRY_DEV_INFRA_DSN)
          echo "SENTRY_DEV_INFRA_DSN: $ENCRYPTED_SENTRY_DEV_INFRA_DSN"

          # Encrypt SLACK_WEBHOOK
          ENCRYPTED_SLACK_WEBHOOK=$(encrypt_with_pubkey $SLACK_WEBHOOK)
          echo "SLACK_WEBHOOK: $ENCRYPTED_SLACK_WEBHOOK"

          # Encrypt SLACK_WEBHOOK_URL_SAMS_DEV
          ENCRYPTED_SLACK_WEBHOOK_URL_SAMS_DEV=$(encrypt_with_pubkey $SLACK_WEBHOOK_URL_SAMS_DEV)
          echo "SLACK_WEBHOOK_URL_SAMS_DEV: $ENCRYPTED_SLACK_WEBHOOK_URL_SAMS_DEV"

          # Encrypt SLACK_WEBHOOK_URL_SAMS_PROD
          ENCRYPTED_SLACK_WEBHOOK_URL_SAMS_PROD=$(encrypt_with_pubkey $SLACK_WEBHOOK_URL_SAMS_PROD)
          echo "SLACK_WEBHOOK_URL_SAMS_PROD: $ENCRYPTED_SLACK_WEBHOOK_URL_SAMS_PROD"

          # Encrypt SRC_ACCESS_TOKEN_DEMO
          ENCRYPTED_SRC_ACCESS_TOKEN_DEMO=$(encrypt_with_pubkey $SRC_ACCESS_TOKEN_DEMO)
          echo "SRC_ACCESS_TOKEN_DEMO: $ENCRYPTED_SRC_ACCESS_TOKEN_DEMO"

          # Encrypt SRC_ACCESS_TOKEN_DOTCOM
          ENCRYPTED_SRC_ACCESS_TOKEN_DOTCOM=$(encrypt_with_pubkey $SRC_ACCESS_TOKEN_DOTCOM)
          echo "SRC_ACCESS_TOKEN_DOTCOM: $ENCRYPTED_SRC_ACCESS_TOKEN_DOTCOM"

          # Encrypt SRC_ACCESS_TOKEN_S2
          ENCRYPTED_SRC_ACCESS_TOKEN_S2=$(encrypt_with_pubkey $SRC_ACCESS_TOKEN_S2)
          echo "SRC_ACCESS_TOKEN_S2: $ENCRYPTED_SRC_ACCESS_TOKEN_S2"

          # Encrypt SRC_RENOVATE_APP_ID
          ENCRYPTED_SRC_RENOVATE_APP_ID=$(encrypt_with_pubkey $SRC_RENOVATE_APP_ID)
          echo "SRC_RENOVATE_APP_ID: $ENCRYPTED_SRC_RENOVATE_APP_ID"

          # Encrypt SRC_RENOVATE_APP_PEM
          ENCRYPTED_SRC_RENOVATE_APP_PEM=$(encrypt_with_pubkey $SRC_RENOVATE_APP_PEM)
          echo "SRC_RENOVATE_APP_PEM: $ENCRYPTED_SRC_RENOVATE_APP_PEM"

          # Encrypt TEST_PRV_TOKEN
          ENCRYPTED_TEST_PRV_TOKEN=$(encrypt_with_pubkey $TEST_PRV_TOKEN)
          echo "TEST_PRV_TOKEN: $ENCRYPTED_TEST_PRV_TOKEN"

          # Encrypt VSCODE_MARKETPLACE_TOKEN
          ENCRYPTED_VSCODE_MARKETPLACE_TOKEN=$(encrypt_with_pubkey $VSCODE_MARKETPLACE_TOKEN)
          echo "VSCODE_MARKETPLACE_TOKEN: $ENCRYPTED_VSCODE_MARKETPLACE_TOKEN"

          # Encrypt VSCODE_OPENVSX_TOKEN
          ENCRYPTED_VSCODE_OPENVSX_TOKEN=$(encrypt_with_pubkey $VSCODE_OPENVSX_TOKEN)
          echo "VSCODE_OPENVSX_TOKEN: $ENCRYPTED_VSCODE_OPENVSX_TOKEN"

        env:
          ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL: ${{ secrets.ANNOUNCE_EDITORS_SLACK_WEBHOOK_URL }}
          ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL: ${{ secrets.ANNOUNCE_RELEASES_SLACK_WEBHOOK_URL }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          BACKPORT_GITHUB_TOKEN: ${{ secrets.BACKPORT_GITHUB_TOKEN }}
          BOT_GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          BUILDKITE_ANALYTICS_TOKEN: ${{ secrets.BUILDKITE_ANALYTICS_TOKEN }}
          BUILDKITE_TOKEN_GEN_PK: ${{ secrets.BUILDKITE_TOKEN_GEN_PK }}
          CODENOTIFY_GITHUB_TOKEN: ${{ secrets.CODENOTIFY_GITHUB_TOKEN }}
          CODE_GRAPH_DASHBOARD_TOKEN: ${{ secrets.CODE_GRAPH_DASHBOARD_TOKEN }}
          DATA_TEAM_PROVIDER_NAME: ${{ secrets.DATA_TEAM_PROVIDER_NAME }}
          DATA_TEAM_SA_EMAIL: ${{ secrets.DATA_TEAM_SA_EMAIL }}
          DEVX_SERVICE_GH_TOKEN: ${{ secrets.DEVX_SERVICE_GH_TOKEN }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          FAILURE_SLACK_WEBHOOK_URL: ${{ secrets.FAILURE_SLACK_WEBHOOK_URL }}
          GCP_BQ_CREDENTIALS: ${{ secrets.GCP_BQ_CREDENTIALS }}
          GH_PROJECTS_ACTION_TOKEN: ${{ secrets.GH_PROJECTS_ACTION_TOKEN }}
          GH_SAST_PR_TOKEN: ${{ secrets.GH_SAST_PR_TOKEN }}
          GH_SEMGREP_SAST_TOKEN: ${{ secrets.GH_SEMGREP_SAST_TOKEN }}
          GITGUARDIAN_SECURITY_ACCESSKEY: ${{ secrets.GITGUARDIAN_SECURITY_ACCESSKEY }}
          GITGUARDIAN_SECURITY_USERNAME: ${{ secrets.GITGUARDIAN_SECURITY_USERNAME }}
          JETBRAINS_MARKETPLACE_PUBLISH_TOKEN: ${{ secrets.JETBRAINS_MARKETPLACE_PUBLISH_TOKEN }}
          MANAGEMENT_SECRET_DEV: ${{ secrets.MANAGEMENT_SECRET_DEV }}
          MANAGEMENT_SECRET_PROD: ${{ secrets.MANAGEMENT_SECRET_PROD }}
          MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN: ${{ secrets.MANAGE_CODE_REVIEW_EXERCISES_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PRIVATE_SG_ACCESS_TOKEN: ${{ secrets.PRIVATE_SG_ACCESS_TOKEN }}
          PR_AUDITOR_TOKEN: ${{ secrets.PR_AUDITOR_TOKEN }}
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          SEMGREPSAST_VERIFY_TOKEN: ${{ secrets.SEMGREPSAST_VERIFY_TOKEN }}
          SEMGREP_GITHUB_APP_PRIVATE_KEY: ${{ secrets.SEMGREP_GITHUB_APP_PRIVATE_KEY }}
          SENTRY_DEV_INFRA_DSN: ${{ secrets.SENTRY_DEV_INFRA_DSN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_URL_SAMS_DEV: ${{ secrets.SLACK_WEBHOOK_URL_SAMS_DEV }}
          SLACK_WEBHOOK_URL_SAMS_PROD: ${{ secrets.SLACK_WEBHOOK_URL_SAMS_PROD }}
          SRC_ACCESS_TOKEN_DEMO: ${{ secrets.SRC_ACCESS_TOKEN_DEMO }}
          SRC_ACCESS_TOKEN_DOTCOM: ${{ secrets.SRC_ACCESS_TOKEN_DOTCOM }}
          SRC_ACCESS_TOKEN_S2: ${{ secrets.SRC_ACCESS_TOKEN_S2 }}
          SRC_RENOVATE_APP_ID: ${{ secrets.SRC_RENOVATE_APP_ID }}
          SRC_RENOVATE_APP_PEM: ${{ secrets.SRC_RENOVATE_APP_PEM }}
          TEST_PRV_TOKEN: ${{ secrets.TEST_PRV_TOKEN }}
          VSCODE_MARKETPLACE_TOKEN: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
          VSCODE_OPENVSX_TOKEN: ${{ secrets.VSCODE_OPENVSX_TOKEN }}
